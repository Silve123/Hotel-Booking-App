{"ast":null,"code":"var _jsxFileName = \"/home/headmaster/Templates/hotel-booking-app/src/components/Booking.js\",\n  _s = $RefreshSig$();\n// src/components/Booking.js\nimport { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebaseConfig\";\nimport { collection, getDocs, addDoc } from \"firebase/firestore\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css'; // Import default styles for the calendar\nimport './Booking.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Booking = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [bookingDates, setBookingDates] = useState([]); // Store booked dates\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const roomsCollectionRef = collection(db, \"rooms\");\n        const roomsCollection = await getDocs(roomsCollectionRef);\n        setRooms(roomsCollection.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })));\n      } catch (error) {\n        console.error(\"Error fetching rooms:\", error);\n      }\n    };\n    const fetchBookings = async () => {\n      try {\n        const bookingsCollectionRef = collection(db, \"bookings\");\n        const bookingsCollection = await getDocs(bookingsCollectionRef);\n        const bookings = bookingsCollection.docs.map(doc => ({\n          ...doc.data()\n        }));\n        // Extract booking dates for selected room\n        const bookedDates = bookings.filter(booking => booking.roomId === (selectedRoom === null || selectedRoom === void 0 ? void 0 : selectedRoom.id)).map(booking => new Date(booking.bookingDate));\n        setBookingDates(bookedDates);\n      } catch (error) {\n        console.error(\"Error fetching bookings:\", error);\n      }\n    };\n    fetchRooms();\n    if (selectedRoom) fetchBookings(); // Fetch bookings only if a room is selected\n  }, [selectedRoom]);\n  const handleBooking = async () => {\n    const user = auth.currentUser;\n    if (user) {\n      try {\n        await addDoc(collection(db, \"bookings\"), {\n          userId: user.uid,\n          roomId: selectedRoom.id,\n          bookingDate: selectedDate.toISOString().split('T')[0] // Store date in YYYY-MM-DD format\n        });\n        alert(\"Room booked successfully!\");\n        // Reset selected room and date after booking\n        setSelectedRoom(null);\n        setSelectedDate(new Date());\n        setBookingDates([]); // Reset booked dates\n      } catch (error) {\n        alert(\"Error booking room: \" + error.message);\n      }\n    } else {\n      alert(\"Please log in to book a room.\");\n    }\n  };\n  const tileClassName = ({\n    date\n  }) => {\n    // Highlight booked dates\n    return bookingDates.some(d => d.toDateString() === date.toDateString()) ? 'booked' : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"booking-title\",\n      children: \"Book a Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-cards\",\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `room-card ${(selectedRoom === null || selectedRoom === void 0 ? void 0 : selectedRoom.id) === room.id ? 'selected' : ''} ${room.availability ? '' : 'unavailable'}`,\n        onClick: () => room.availability && setSelectedRoom(room),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"room-name\",\n          children: room.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"room-price\",\n          children: [\"$\", room.price, \"/night\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"room-availability\",\n          children: room.availability ? \"Available\" : \"Unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), selectedRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setSelectedDate,\n        value: selectedDate,\n        tileClassName: tileClassName // Apply custom class for booked dates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBooking,\n        className: \"booking-button\",\n        children: \"Book Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Booking, \"n9fbCvHIjhBBQQ5Rs5IWy8oxSnE=\");\n_c = Booking;\nexport default Booking;\nvar _c;\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"names":["useState","useEffect","db","auth","collection","getDocs","addDoc","Calendar","jsxDEV","_jsxDEV","Booking","_s","rooms","setRooms","selectedRoom","setSelectedRoom","bookingDates","setBookingDates","selectedDate","setSelectedDate","Date","fetchRooms","roomsCollectionRef","roomsCollection","docs","map","doc","id","data","error","console","fetchBookings","bookingsCollectionRef","bookingsCollection","bookings","bookedDates","filter","booking","roomId","bookingDate","handleBooking","user","currentUser","userId","uid","toISOString","split","alert","message","tileClassName","date","some","d","toDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","room","availability","onClick","name","price","onChange","value","_c","$RefreshReg$"],"sources":["/home/headmaster/Templates/hotel-booking-app/src/components/Booking.js"],"sourcesContent":["// src/components/Booking.js\nimport { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebaseConfig\";\nimport { collection, getDocs, addDoc } from \"firebase/firestore\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css'; // Import default styles for the calendar\nimport './Booking.scss';\n\nconst Booking = () => {\n    const [rooms, setRooms] = useState([]);\n    const [selectedRoom, setSelectedRoom] = useState(null);\n    const [bookingDates, setBookingDates] = useState([]); // Store booked dates\n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n    useEffect(() => {\n        const fetchRooms = async () => {\n            try {\n                const roomsCollectionRef = collection(db, \"rooms\");\n                const roomsCollection = await getDocs(roomsCollectionRef);\n                setRooms(roomsCollection.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n            } catch (error) {\n                console.error(\"Error fetching rooms:\", error);\n            }\n        };\n\n        const fetchBookings = async () => {\n            try {\n                const bookingsCollectionRef = collection(db, \"bookings\");\n                const bookingsCollection = await getDocs(bookingsCollectionRef);\n                const bookings = bookingsCollection.docs.map(doc => ({ ...doc.data() }));\n                // Extract booking dates for selected room\n                const bookedDates = bookings\n                    .filter(booking => booking.roomId === selectedRoom?.id)\n                    .map(booking => new Date(booking.bookingDate));\n                setBookingDates(bookedDates);\n            } catch (error) {\n                console.error(\"Error fetching bookings:\", error);\n            }\n        };\n\n        fetchRooms();\n        if (selectedRoom) fetchBookings(); // Fetch bookings only if a room is selected\n    }, [selectedRoom]);\n\n    const handleBooking = async () => {\n        const user = auth.currentUser;\n        if (user) {\n            try {\n                await addDoc(collection(db, \"bookings\"), {\n                    userId: user.uid,\n                    roomId: selectedRoom.id,\n                    bookingDate: selectedDate.toISOString().split('T')[0], // Store date in YYYY-MM-DD format\n                });\n                alert(\"Room booked successfully!\");\n                // Reset selected room and date after booking\n                setSelectedRoom(null);\n                setSelectedDate(new Date());\n                setBookingDates([]); // Reset booked dates\n            } catch (error) {\n                alert(\"Error booking room: \" + error.message);\n            }\n        } else {\n            alert(\"Please log in to book a room.\");\n        }\n    };\n\n    const tileClassName = ({ date }) => {\n        // Highlight booked dates\n        return bookingDates.some(d => d.toDateString() === date.toDateString()) ? 'booked' : null;\n    };\n\n    return (\n        <div className=\"booking-container\">\n            <h2 className=\"booking-title\">Book a Room</h2>\n            <div className=\"room-cards\">\n                {rooms.map(room => (\n                    <div\n                        key={room.id}\n                        className={`room-card ${selectedRoom?.id === room.id ? 'selected' : ''} ${room.availability ? '' : 'unavailable'}`}\n                        onClick={() => room.availability && setSelectedRoom(room)}\n                    >\n                        <h3 className=\"room-name\">{room.name}</h3>\n                        <p className=\"room-price\">${room.price}/night</p>\n                        <p className=\"room-availability\">\n                            {room.availability ? \"Available\" : \"Unavailable\"}\n                        </p>\n                    </div>\n                ))}\n            </div>\n\n            {selectedRoom && (\n                <div className=\"calendar-container\">\n                    <Calendar\n                        onChange={setSelectedDate}\n                        value={selectedDate}\n                        tileClassName={tileClassName} // Apply custom class for booked dates\n                    />\n                    <button onClick={handleBooking} className=\"booking-button\">\n                        Book Now\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Booking;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}