{"ast":null,"code":"var _jsxFileName = \"/home/headmaster/Templates/hotel-booking-app/src/components/Auth.js\",\n  _s = $RefreshSig$();\n// src/components/Auth.js\nimport { useState } from \"react\";\nimport { auth } from \"../firebaseConfig\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\"; // Import the GoogleAuthProvider\nimport './styling/Auth.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, setLogin] = useState(true);\n  const provider = new GoogleAuthProvider(); // Create a Google provider instance\n\n  const handleSignUp = async () => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      alert(\"Registration successful!\");\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      alert(\"Login successful!\");\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleGoogleSignIn = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      // This gives you a Google Access Token. You can use it to access Google APIs.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      const user = result.user;\n      alert(`Welcome ${user.displayName}!`); // Display the user's name\n    } catch (error) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.customData.email;\n      // The firebase.auth.AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      alert(`Error logging in with Google: ${errorMessage}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hotel Booking App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setLogin(true),\n        className: login ? \"auth-title title-checked\" : \"auth-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setLogin(false),\n        className: !login ? \"auth-title title-checked\" : \"auth-title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      className: \"auth-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"auth-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), login ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"auth-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignUp,\n      className: \"auth-button\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleSignIn,\n      className: \"auth-button\",\n      children: \"Signin with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"kNdIrVvdiEGIL+TCBmyek19mhxg=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","email","setEmail","password","setPassword","login","setLogin","provider","handleSignUp","alert","error","message","handleLogin","handleGoogleSignIn","result","credential","credentialFromResult","token","accessToken","user","displayName","errorCode","code","errorMessage","customData","credentialFromError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/headmaster/Templates/hotel-booking-app/src/components/Auth.js"],"sourcesContent":["// src/components/Auth.js\nimport { useState } from \"react\";\nimport { auth } from \"../firebaseConfig\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  GoogleAuthProvider,\n} from \"firebase/auth\"; // Import the GoogleAuthProvider\nimport './styling/Auth.scss';\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, setLogin] = useState(true);\n  const provider = new GoogleAuthProvider(); // Create a Google provider instance\n\n  const handleSignUp = async () => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      alert(\"Registration successful!\");\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      alert(\"Login successful!\");\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const handleGoogleSignIn = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      // This gives you a Google Access Token. You can use it to access Google APIs.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      const user = result.user;\n      alert(`Welcome ${user.displayName}!`); // Display the user's name\n    } catch (error) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.customData.email;\n      // The firebase.auth.AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      alert(`Error logging in with Google: ${errorMessage}`);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <h1>Hotel Booking App</h1>\n      <div className=\"auth-toggle\">\n        <a\n          onClick={() => setLogin(true)}\n          className={login ? \"auth-title title-checked\" : \"auth-title\"}\n        >\n          Login\n        </a>\n        <a\n          onClick={() => setLogin(false)}\n          className={!login ? \"auth-title title-checked\" : \"auth-title\"}\n        >\n          Register\n        </a>\n      </div>\n\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        className=\"auth-input\"\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        className=\"auth-input\"\n      />\n\n      {login ? (\n        <>\n          <button onClick={handleLogin} className=\"auth-button\">\n            Login\n          </button>\n        </>\n      ) : (\n        <button onClick={handleSignUp} className=\"auth-button\">\n          Register\n        </button>\n      )}\n      <button onClick={handleGoogleSignIn} className=\"auth-button\">\n        Signin with Google\n      </button>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}